/* automatically generated by rust-bindgen 0.61.0 */

use crate::{time::*, types::*};

pub const MAX_UNITS_SIZE: i32 = 8;
pub const MAX_ENUM_STRING_SIZE: i32 = 26;
pub const MAX_ENUM_STATES: i32 = 16;
pub const DBF_STRING: i32 = 0;
pub const DBF_INT: i32 = 1;
pub const DBF_SHORT: i32 = 1;
pub const DBF_FLOAT: i32 = 2;
pub const DBF_ENUM: i32 = 3;
pub const DBF_CHAR: i32 = 4;
pub const DBF_LONG: i32 = 5;
pub const DBF_DOUBLE: i32 = 6;
pub const DBF_NO_ACCESS: i32 = 7;
pub const LAST_TYPE: i32 = 6;
pub const DBR_STRING: i32 = 0;
pub const DBR_INT: i32 = 1;
pub const DBR_SHORT: i32 = 1;
pub const DBR_FLOAT: i32 = 2;
pub const DBR_ENUM: i32 = 3;
pub const DBR_CHAR: i32 = 4;
pub const DBR_LONG: i32 = 5;
pub const DBR_DOUBLE: i32 = 6;
pub const DBR_STS_STRING: i32 = 7;
pub const DBR_STS_SHORT: i32 = 8;
pub const DBR_STS_INT: i32 = 8;
pub const DBR_STS_FLOAT: i32 = 9;
pub const DBR_STS_ENUM: i32 = 10;
pub const DBR_STS_CHAR: i32 = 11;
pub const DBR_STS_LONG: i32 = 12;
pub const DBR_STS_DOUBLE: i32 = 13;
pub const DBR_TIME_STRING: i32 = 14;
pub const DBR_TIME_INT: i32 = 15;
pub const DBR_TIME_SHORT: i32 = 15;
pub const DBR_TIME_FLOAT: i32 = 16;
pub const DBR_TIME_ENUM: i32 = 17;
pub const DBR_TIME_CHAR: i32 = 18;
pub const DBR_TIME_LONG: i32 = 19;
pub const DBR_TIME_DOUBLE: i32 = 20;
pub const DBR_GR_STRING: i32 = 21;
pub const DBR_GR_SHORT: i32 = 22;
pub const DBR_GR_INT: i32 = 22;
pub const DBR_GR_FLOAT: i32 = 23;
pub const DBR_GR_ENUM: i32 = 24;
pub const DBR_GR_CHAR: i32 = 25;
pub const DBR_GR_LONG: i32 = 26;
pub const DBR_GR_DOUBLE: i32 = 27;
pub const DBR_CTRL_STRING: i32 = 28;
pub const DBR_CTRL_SHORT: i32 = 29;
pub const DBR_CTRL_INT: i32 = 29;
pub const DBR_CTRL_FLOAT: i32 = 30;
pub const DBR_CTRL_ENUM: i32 = 31;
pub const DBR_CTRL_CHAR: i32 = 32;
pub const DBR_CTRL_LONG: i32 = 33;
pub const DBR_CTRL_DOUBLE: i32 = 34;
pub const DBR_PUT_ACKT: i32 = 35;
pub const DBR_PUT_ACKS: i32 = 36;
pub const DBR_STSACK_STRING: i32 = 37;
pub const DBR_CLASS_NAME: i32 = 38;
pub const LAST_BUFFER_TYPE: i32 = 38;
pub const db_strval_dim: i32 = 40;
pub const db_units_dim: i32 = 8;
pub const db_desc_dim: i32 = 24;
pub const db_name_dim: i32 = 36;
pub const db_state_dim: i32 = 16;
pub const db_state_text_dim: i32 = 26;
pub type dbr_string_t = epicsOldString;
pub type dbr_char_t = epicsUInt8;
pub type dbr_short_t = epicsInt16;
pub type dbr_ushort_t = epicsUInt16;
pub type dbr_int_t = epicsInt16;
pub type dbr_enum_t = epicsUInt16;
pub type dbr_long_t = epicsInt32;
pub type dbr_ulong_t = epicsUInt32;
pub type dbr_float_t = epicsFloat32;
pub type dbr_double_t = epicsFloat64;
pub type dbr_put_ackt_t = epicsUInt16;
pub type dbr_put_acks_t = epicsUInt16;
pub type dbr_stsack_string_t = epicsOldString;
pub type dbr_class_name_t = epicsOldString;
#[repr(C)]
pub struct dbr_sts_string {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_string_t,
}
#[repr(C)]
pub struct dbr_stsack_string {
    pub status: dbr_ushort_t,
    pub severity: dbr_ushort_t,
    pub ackt: dbr_ushort_t,
    pub acks: dbr_ushort_t,
    pub value: dbr_string_t,
}
#[repr(C)]
pub struct dbr_sts_int {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_sts_short {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_sts_float {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_float_t,
}
#[repr(C)]
pub struct dbr_sts_enum {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_enum_t,
}
#[repr(C)]
pub struct dbr_sts_char {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub RISC_pad: dbr_char_t,
    pub value: dbr_char_t,
}
#[repr(C)]
pub struct dbr_sts_long {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub value: dbr_long_t,
}
#[repr(C)]
pub struct dbr_sts_double {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub RISC_pad: dbr_long_t,
    pub value: dbr_double_t,
}
#[repr(C)]
pub struct dbr_time_string {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub value: dbr_string_t,
}
#[repr(C)]
pub struct dbr_time_short {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub RISC_pad: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_time_float {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub value: dbr_float_t,
}
#[repr(C)]
pub struct dbr_time_enum {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub RISC_pad: dbr_short_t,
    pub value: dbr_enum_t,
}
#[repr(C)]
pub struct dbr_time_char {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub RISC_pad0: dbr_short_t,
    pub RISC_pad1: dbr_char_t,
    pub value: dbr_char_t,
}
#[repr(C)]
pub struct dbr_time_long {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub value: dbr_long_t,
}
#[repr(C)]
pub struct dbr_time_double {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub stamp: epicsTimeStamp,
    pub RISC_pad: dbr_long_t,
    pub value: dbr_double_t,
}
#[repr(C)]
pub struct dbr_gr_int {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_short_t,
    pub lower_disp_limit: dbr_short_t,
    pub upper_alarm_limit: dbr_short_t,
    pub upper_warning_limit: dbr_short_t,
    pub lower_warning_limit: dbr_short_t,
    pub lower_alarm_limit: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_gr_short {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_short_t,
    pub lower_disp_limit: dbr_short_t,
    pub upper_alarm_limit: dbr_short_t,
    pub upper_warning_limit: dbr_short_t,
    pub lower_warning_limit: dbr_short_t,
    pub lower_alarm_limit: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_gr_float {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub precision: dbr_short_t,
    pub RISC_pad0: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_float_t,
    pub lower_disp_limit: dbr_float_t,
    pub upper_alarm_limit: dbr_float_t,
    pub upper_warning_limit: dbr_float_t,
    pub lower_warning_limit: dbr_float_t,
    pub lower_alarm_limit: dbr_float_t,
    pub value: dbr_float_t,
}
#[repr(C)]
pub struct dbr_gr_enum {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub no_str: dbr_short_t,
    pub strs: [[libc::c_char; 26usize]; 16usize],
    pub value: dbr_enum_t,
}
#[repr(C)]
pub struct dbr_gr_char {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_char_t,
    pub lower_disp_limit: dbr_char_t,
    pub upper_alarm_limit: dbr_char_t,
    pub upper_warning_limit: dbr_char_t,
    pub lower_warning_limit: dbr_char_t,
    pub lower_alarm_limit: dbr_char_t,
    pub RISC_pad: dbr_char_t,
    pub value: dbr_char_t,
}
#[repr(C)]
pub struct dbr_gr_long {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_long_t,
    pub lower_disp_limit: dbr_long_t,
    pub upper_alarm_limit: dbr_long_t,
    pub upper_warning_limit: dbr_long_t,
    pub lower_warning_limit: dbr_long_t,
    pub lower_alarm_limit: dbr_long_t,
    pub value: dbr_long_t,
}
#[repr(C)]
pub struct dbr_gr_double {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub precision: dbr_short_t,
    pub RISC_pad0: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_double_t,
    pub lower_disp_limit: dbr_double_t,
    pub upper_alarm_limit: dbr_double_t,
    pub upper_warning_limit: dbr_double_t,
    pub lower_warning_limit: dbr_double_t,
    pub lower_alarm_limit: dbr_double_t,
    pub value: dbr_double_t,
}
#[repr(C)]
pub struct dbr_ctrl_int {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_short_t,
    pub lower_disp_limit: dbr_short_t,
    pub upper_alarm_limit: dbr_short_t,
    pub upper_warning_limit: dbr_short_t,
    pub lower_warning_limit: dbr_short_t,
    pub lower_alarm_limit: dbr_short_t,
    pub upper_ctrl_limit: dbr_short_t,
    pub lower_ctrl_limit: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_ctrl_short {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_short_t,
    pub lower_disp_limit: dbr_short_t,
    pub upper_alarm_limit: dbr_short_t,
    pub upper_warning_limit: dbr_short_t,
    pub lower_warning_limit: dbr_short_t,
    pub lower_alarm_limit: dbr_short_t,
    pub upper_ctrl_limit: dbr_short_t,
    pub lower_ctrl_limit: dbr_short_t,
    pub value: dbr_short_t,
}
#[repr(C)]
pub struct dbr_ctrl_float {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub precision: dbr_short_t,
    pub RISC_pad: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_float_t,
    pub lower_disp_limit: dbr_float_t,
    pub upper_alarm_limit: dbr_float_t,
    pub upper_warning_limit: dbr_float_t,
    pub lower_warning_limit: dbr_float_t,
    pub lower_alarm_limit: dbr_float_t,
    pub upper_ctrl_limit: dbr_float_t,
    pub lower_ctrl_limit: dbr_float_t,
    pub value: dbr_float_t,
}
#[repr(C)]
pub struct dbr_ctrl_enum {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub no_str: dbr_short_t,
    pub strs: [[libc::c_char; 26usize]; 16usize],
    pub value: dbr_enum_t,
}
#[repr(C)]
pub struct dbr_ctrl_char {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_char_t,
    pub lower_disp_limit: dbr_char_t,
    pub upper_alarm_limit: dbr_char_t,
    pub upper_warning_limit: dbr_char_t,
    pub lower_warning_limit: dbr_char_t,
    pub lower_alarm_limit: dbr_char_t,
    pub upper_ctrl_limit: dbr_char_t,
    pub lower_ctrl_limit: dbr_char_t,
    pub RISC_pad: dbr_char_t,
    pub value: dbr_char_t,
}
#[repr(C)]
pub struct dbr_ctrl_long {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_long_t,
    pub lower_disp_limit: dbr_long_t,
    pub upper_alarm_limit: dbr_long_t,
    pub upper_warning_limit: dbr_long_t,
    pub lower_warning_limit: dbr_long_t,
    pub lower_alarm_limit: dbr_long_t,
    pub upper_ctrl_limit: dbr_long_t,
    pub lower_ctrl_limit: dbr_long_t,
    pub value: dbr_long_t,
}
#[repr(C)]
pub struct dbr_ctrl_double {
    pub status: dbr_short_t,
    pub severity: dbr_short_t,
    pub precision: dbr_short_t,
    pub RISC_pad0: dbr_short_t,
    pub units: [libc::c_char; 8usize],
    pub upper_disp_limit: dbr_double_t,
    pub lower_disp_limit: dbr_double_t,
    pub upper_alarm_limit: dbr_double_t,
    pub upper_warning_limit: dbr_double_t,
    pub lower_warning_limit: dbr_double_t,
    pub lower_alarm_limit: dbr_double_t,
    pub upper_ctrl_limit: dbr_double_t,
    pub lower_ctrl_limit: dbr_double_t,
    pub value: dbr_double_t,
}
#[repr(u32)]
#[derive(Debug, Copy, Clone, Hash, PartialEq, Eq)]
pub enum dbr_value_class {
    dbr_class_int = 0,
    dbr_class_float = 1,
    dbr_class_string = 2,
    dbr_class_max = 3,
}
#[repr(C)]
pub union db_access_val {
    pub strval: ::core::mem::ManuallyDrop<dbr_string_t>,
    pub shrtval: ::core::mem::ManuallyDrop<dbr_short_t>,
    pub intval: ::core::mem::ManuallyDrop<dbr_short_t>,
    pub fltval: ::core::mem::ManuallyDrop<dbr_float_t>,
    pub enmval: ::core::mem::ManuallyDrop<dbr_enum_t>,
    pub charval: ::core::mem::ManuallyDrop<dbr_char_t>,
    pub longval: ::core::mem::ManuallyDrop<dbr_long_t>,
    pub doubleval: ::core::mem::ManuallyDrop<dbr_double_t>,
    pub sstrval: ::core::mem::ManuallyDrop<dbr_sts_string>,
    pub sshrtval: ::core::mem::ManuallyDrop<dbr_sts_short>,
    pub sfltval: ::core::mem::ManuallyDrop<dbr_sts_float>,
    pub senmval: ::core::mem::ManuallyDrop<dbr_sts_enum>,
    pub schrval: ::core::mem::ManuallyDrop<dbr_sts_char>,
    pub slngval: ::core::mem::ManuallyDrop<dbr_sts_long>,
    pub sdblval: ::core::mem::ManuallyDrop<dbr_sts_double>,
    pub tstrval: ::core::mem::ManuallyDrop<dbr_time_string>,
    pub tshrtval: ::core::mem::ManuallyDrop<dbr_time_short>,
    pub tfltval: ::core::mem::ManuallyDrop<dbr_time_float>,
    pub tenmval: ::core::mem::ManuallyDrop<dbr_time_enum>,
    pub tchrval: ::core::mem::ManuallyDrop<dbr_time_char>,
    pub tlngval: ::core::mem::ManuallyDrop<dbr_time_long>,
    pub tdblval: ::core::mem::ManuallyDrop<dbr_time_double>,
    pub gstrval: ::core::mem::ManuallyDrop<dbr_sts_string>,
    pub gshrtval: ::core::mem::ManuallyDrop<dbr_gr_short>,
    pub gfltval: ::core::mem::ManuallyDrop<dbr_gr_float>,
    pub genmval: ::core::mem::ManuallyDrop<dbr_gr_enum>,
    pub gchrval: ::core::mem::ManuallyDrop<dbr_gr_char>,
    pub glngval: ::core::mem::ManuallyDrop<dbr_gr_long>,
    pub gdblval: ::core::mem::ManuallyDrop<dbr_gr_double>,
    pub cstrval: ::core::mem::ManuallyDrop<dbr_sts_string>,
    pub cshrtval: ::core::mem::ManuallyDrop<dbr_ctrl_short>,
    pub cfltval: ::core::mem::ManuallyDrop<dbr_ctrl_float>,
    pub cenmval: ::core::mem::ManuallyDrop<dbr_ctrl_enum>,
    pub cchrval: ::core::mem::ManuallyDrop<dbr_ctrl_char>,
    pub clngval: ::core::mem::ManuallyDrop<dbr_ctrl_long>,
    pub cdblval: ::core::mem::ManuallyDrop<dbr_ctrl_double>,
    pub putackt: ::core::mem::ManuallyDrop<dbr_put_ackt_t>,
    pub putacks: ::core::mem::ManuallyDrop<dbr_put_acks_t>,
    pub sastrval: ::core::mem::ManuallyDrop<dbr_sts_string>,
    pub classname: ::core::mem::ManuallyDrop<dbr_string_t>,
}
extern "C" {
    pub static epicsTypeToDBR_XXXX: [libc::c_int; 11usize];
    pub static DBR_XXXXToEpicsType: [epicsType; 39usize];
    pub static dbr_size: [libc::c_ushort; 0usize];
    pub static dbr_value_size: [libc::c_ushort; 0usize];
    pub static dbr_value_class: [dbr_value_class; 39usize];
    pub static dbr_value_offset: [libc::c_ushort; 39usize];
    pub static mut dbf_text: [*const libc::c_char; 9usize];
    pub static dbf_text_dim: libc::c_short;
    pub static mut dbf_text_invalid: *const libc::c_char;
    pub static mut dbr_text: [*const libc::c_char; 39usize];
    pub static dbr_text_dim: libc::c_short;
    pub static mut dbr_text_invalid: *const libc::c_char;
}
